pipeline {
    agent any
    triggers {
        pollSCM('H/5 * * * *') // this will check for new script after 5 minutes if there is a new script it will be riggered automatically
    }
    stages {
        // Stage 1: Build
        stage('Build') {
            steps {
                script {
                    echo "Stage: Build - Task: Compile and package the code using a build automation tool."
                    echo "Tool: Maven"
                }
            }
        }

        // Stage 2: Unit and Integration Tests
        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo "Stage: Unit and Integration Tests - Task: Run unit tests to ensure code functions as expected, and run integration tests to ensure different components work together."
                    echo "Tools: JUnit for unit tests, Selenium for integration tests"
                }
            }
            post {
                always {
                    mail to: "awanishg444@gmail.com",
                         subject: "Unit and Integration Tests - Pipeline Status: ${currentBuild.currentResult}",
                         body: "The Unit and Integration Tests stage has completed."
                         attachLog: true
                         attachmentsPattern: 'build-log.txt'
                }
            }
        }

        // Stage 3: Code Analysis
        stage('Code Analysis') {
            steps {
                script {
                    echo "Stage: Code Analysis - Task: Analyze the code to ensure it meets industry standards."
                    echo "Tool: SonarQube"
                }
            }
        }

        // Stage 4: Security Scan
        stage('Security Scan') {
            steps {
                script {
                    echo "Stage: Security Scan - Task: Perform a security scan to identify vulnerabilities."
                    echo "Tool: OWASP ZAP"
                }
            }
            post {
                always {
                    mail to: "awanishg444@gmail.com",
                         subject: "Security Scan - Pipeline Status: ${currentBuild.currentResult}",
                         body: "The Security Scan stage has completed."
                         attachLog: true
                         attachmentsPattern: 'build-log.txt'
                }
            }
        }

        // Stage 5: Deploy to Staging
        stage('Deploy to Staging') {
            steps {
                script {
                    echo "Stage: Deploy to Staging - Task: Deploy the application to a staging server."
                    echo "Tool: AWS EC2"
                }
            }
        }

        // Stage 6: Integration Tests on Staging
        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo "Stage: Integration Tests on Staging - Task: Run integration tests on the staging environment."
                    echo "Tools: JUnit, Selenium"
                }
            }
        }

        // Stage 7: Deploy to Production
        stage('Deploy to Production') {
            steps {
                script {
                    echo "Stage: Deploy to Production - Task: Deploy the application to the production environment."
                    echo "Tool: AWS EC2"
                }
            }
        }
    }

    post {
        success {
            mail to: "awanishg444@gmail.com",
                 subject: "Pipeline Success",
                 body: "The pipeline completed successfully!"
                 attachLog: true
        }
        failure {
            mail to: "awanishg444@gmail.com",
                 subject: "Pipeline Failure",
                 body: "The pipeline failed. Please review the Jenkins logs for more details."
                 attachLog: true
                 attachmentsPattern: 'build-log.txt'
        }
    }
}
